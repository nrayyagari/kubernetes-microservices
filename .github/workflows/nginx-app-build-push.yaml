name: microservice1-build-push-master

on:
  push:
    branches: [ main ]
    paths: [ microservice1/** ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: microservice1
        IMAGE_TAG: ${{ github.sha }}-${{ github.run_number }}
      run: |
        cd microservice1
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
    - name: Update Image Version in the related deployment.yaml
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: 'microservice2/weather-app.yaml'
        propertyPath: 'backend.version'
        value: ${{ steps.image.outputs.version }}
        branch: deployment/${{ steps.image.outputs.version }}
        targetBranch: development
        createPR: true
        message: 'Update Image Version to ${{ steps.image.outputs.version }}' 
